<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2bzG0PAMKiQIzZUTEGDvxXmxa0NadNDc6Lye1c9lXTX3JmY50aESzZHVYZuYkoTe5tFd8RdP/EF36cfu
        1Oi0970Q9mlTgggmVI6BGPxE/iC79OPGVei0970MwPUoOm7Lkejn4ir/ABBc+nHjKnRY73bS8JTkpWIs
        3MiCGGVEu1kN5cb8pv3OgUVjsfVjppmqnRo0s9u1FvTolozm9HJbaJpn2MpBHfW1gdlxliuZn0cydC2W
        TZ36ltP6bl2+F2NLQrzSuVbSwQEBAQEGs+0yV8kbTMSki+5FlfF2LgOWfi53R6pPD5GE0zCjKcJ3y2K/
        yTORps6tG6Yjrlo7Q6VdheVq8LZpsxRE6N6leH5887S7omHYDxYmKO4Wra6+ufTjxlZ0WO95omFJd3GN
        HHc3FXr659OPGTosd6PqOBpeblY0NszMNL2FtyGEC6x3OXK7lE0ezj3xo1yrGG0Tp0sOzIQBC2K4vjAW
        3+R49uNdQeF29H52Nm5lbO5HPpU9nfpGJ4eKvSMNsaUTXmleq2lggICAgICAgIPLVabL1mmTdPm2GJKz
        UF8CKwOLS5jmlrhcajQnUKkxFUaJGlO2LJRtkhsizWyzbzXWNaPK6NiaIHAADRrZmGy/aG/DPbcomeSs
        H2W4ZvbV97Xo5cM9YJ/hBEd2xiOX19pU6qwn04V9tX3uDlxz2f7eif3ilvgVOqsL9OD21fe4+Vxz2f7c
        ef8AiKW+BV6qwv04PbV958rlnsH/AJ2/+8Ur8CdVYT6cHtq+9j9QyT5s8RVl1TxFSKdXppzWtdGma7Lb
        5aOAuLK/q+zTTzbcaFPaTM+99QsvGB6ps22JYMwzWxAbV6bTYUGabLROUhtialzWusN4Am17a2W/ao9n
        RFM9jFM6Z0rFWZQQEBAQEGsmavLJjXaWJnEey/aBOYPxUYTRFp8w4Op9QLG2bvHdLoMS2m+27TYXbzrQ
        v4HD4irn3KdMstNyqmNES0s+Vxz1D6taf9+SS1eqsJ8nmv8AbV958rlnq+22n/fkknVWE+TzPbV97j5X
        LPX9tN/Pckq9VYT5PNT21fefK556/tln57kVTqrCfJ5q+2r73gr2VbO1ielRaZVmQKjTYzmmNKxa3JBs
        QNNwDYg8VfTyZhqJ51NGiVs3q590y+leV3Z/WtluwDBWFsRQ4EKuU6R3JuFLReUhsiOe55aHeatvWuNL
        g20Ujao9nRFPcxTOmdK01lUEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEH//Z
</value>
  </data>
</root>